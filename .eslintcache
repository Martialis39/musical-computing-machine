[{"/mnt/c/Users/Mart/projects/active-calendar/src/App.tsx":"1","/mnt/c/Users/Mart/projects/active-calendar/src/reportWebVitals.ts":"2","/mnt/c/Users/Mart/projects/active-calendar/src/utility/index.ts":"3","/mnt/c/Users/Mart/projects/active-calendar/src/index.tsx":"4","/mnt/c/Users/Mart/projects/active-calendar/src/reducers/index.ts":"5","/mnt/c/Users/Mart/projects/active-calendar/src/constants/index.ts":"6","/mnt/c/Users/Mart/projects/active-calendar/src/components/Calendar.tsx":"7","/mnt/c/Users/Mart/projects/active-calendar/src/components/CalendarPane.tsx":"8","/mnt/c/Users/Mart/projects/active-calendar/src/api/index.ts":"9","/mnt/c/Users/Mart/projects/active-calendar/src/hooks/index.ts":"10","/mnt/c/Users/Mart/projects/active-calendar/src/types.ts":"11"},{"size":579,"mtime":1610131313000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1609958797760,"results":"14","hashOfConfig":"13"},{"size":1557,"mtime":1610195520701,"results":"15","hashOfConfig":"13"},{"size":500,"mtime":1609958797746,"results":"16","hashOfConfig":"13"},{"size":1331,"mtime":1610198110243,"results":"17","hashOfConfig":"13"},{"size":173,"mtime":1610189795800,"results":"18","hashOfConfig":"13"},{"size":2822,"mtime":1610198133210,"results":"19","hashOfConfig":"13"},{"size":585,"mtime":1610192704554,"results":"20","hashOfConfig":"13"},{"size":571,"mtime":1610131249195,"results":"21","hashOfConfig":"13"},{"size":1232,"mtime":1610198278480,"results":"22","hashOfConfig":"13"},{"size":851,"mtime":1610198081437,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dbq36s",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Mart/projects/active-calendar/src/App.tsx",["49","50","51"],"/mnt/c/Users/Mart/projects/active-calendar/src/reportWebVitals.ts",[],"/mnt/c/Users/Mart/projects/active-calendar/src/utility/index.ts",[],"/mnt/c/Users/Mart/projects/active-calendar/src/index.tsx",[],["52","53"],"/mnt/c/Users/Mart/projects/active-calendar/src/reducers/index.ts",["54"],"/mnt/c/Users/Mart/projects/active-calendar/src/constants/index.ts",[],"/mnt/c/Users/Mart/projects/active-calendar/src/components/Calendar.tsx",["55","56","57"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport { CalendarState, Holidays } from '../types'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { CalendarPane } from './CalendarPane'\r\n\r\nimport { WEEK } from '../constants';\r\n\r\nimport { generateWeekFromStartOfWeek } from '../utility/index'\r\nimport { useFetchDates } from '../hooks';\r\nimport { formatDate } from '../utility/'\r\n\r\nconst offsetByOneWeek = (prevState: number, stateHook: Function) => () => {\r\n  stateHook(prevState + 7);\r\n}\r\n\r\nconst offsetMinusOneWeek = (prevState: number, stateHook: Function) => () => {\r\n  stateHook(prevState - 7);\r\n}\r\n\r\nconst renderWeek = (week : Array<any>, holidays: Holidays) => {\r\n   return week.map(day => <CalendarPane day={day} holidays={holidays[day.date]}/>)\r\n}\r\n\r\nconst mapStateToProps = (state : CalendarState ) => {\r\n    return {\r\n      today: state.today,\r\n      holidays: state.holidays,\r\n      earliestDate: state.earliestDate,\r\n      latestDate: state.latestDate\r\n    }\r\n}\r\n\r\nconst connector = connect(\r\n  mapStateToProps,\r\n)\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\ninterface Props extends PropsFromRedux {\r\n  today: Date,\r\n  holidays: Holidays,\r\n  earliestDate: string,\r\n  latestDate: string\r\n}\r\n\r\nconst Calendar = (props: Props) => {\r\n    const { today, holidays, earliestDate, latestDate } = props;\r\n    console.log(\"Hol \", holidays)\r\n    const [isLoading, fetchDates] = useFetchDates();\r\n    const [offsetDays, setOffsetDays] = useState(0);\r\n    const [startOfWeek, setStartOfWeek] = useState(0);\r\n    const week = generateWeekFromStartOfWeek(startOfWeek, today, offsetDays);\r\n\r\n\r\n    useEffect(() => {\r\n      console.log(week[0].date, week[week.length - 1].date)\r\n      const [start, end] = [week[0].date, week[week.length - 1].date]\r\n      fetchDates(start, end, earliestDate, latestDate);\r\n    }, [offsetDays])\r\n\r\n\r\n    return <div className=\"calendar\">\r\n      <div className=\"buttons\">\r\n        <button onClick={offsetMinusOneWeek(offsetDays, setOffsetDays)}>\r\n          Left\r\n        </button>\r\n        <button onClick={offsetByOneWeek(offsetDays, setOffsetDays)}>\r\n          Right\r\n        </button>\r\n      </div>\r\n      <div className=\"calendar__intro\">\r\n        <p>\r\n        Hi, today is a\r\n        </p>\r\n        <h2>{WEEK[today.getDay()]}</h2>\r\n        <div className=\"calendar__select-day\">\r\n          <p>The week starts on a </p>\r\n          <select value={startOfWeek} onChange={e => {\r\n            setStartOfWeek(Number(e.target.value))\r\n          }}>\r\n            {WEEK.map((day, i) => {\r\n              return <option value={i}>{day}</option>\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"calendar-body\">\r\n        {renderWeek(week, holidays)}\r\n      </div>\r\n    </div>\r\n}\r\n  \r\n  \r\nexport default connector(Calendar)","/mnt/c/Users/Mart/projects/active-calendar/src/components/CalendarPane.tsx",["58"],"import React from 'react'\r\nimport { Holidays, Holiday } from '../types';\r\n\r\n\r\ninterface Props {\r\n  day: any,\r\n  holidays: Array<Holiday>\r\n}\r\n  \r\n\r\nexport const CalendarPane = (props : Props) => {\r\n    const {day, holidays} = props;\r\n    const {name, date} = day;\r\n    return <div className=\"calendar-pane\">\r\n        <div className=\"calendar-pane__header\">\r\n            <div>{name}</div>\r\n            <div>{date}</div>\r\n        </div>\r\n        <div className=\"calendar-pane__body\">\r\n            {holidays && holidays.map((d : Holiday) => <p>{d.name}</p>)}\r\n        </div>\r\n    </div>\r\n}","/mnt/c/Users/Mart/projects/active-calendar/src/api/index.ts",["59"],"/mnt/c/Users/Mart/projects/active-calendar/src/hooks/index.ts",[],"/mnt/c/Users/Mart/projects/active-calendar/src/types.ts",[],{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":11,"column":10,"nodeType":"62","messageId":"63","endLine":11,"endColumn":18},{"ruleId":"60","severity":1,"message":"65","line":13,"column":10,"nodeType":"62","messageId":"63","endLine":13,"endColumn":37},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":50,"column":14,"nodeType":"72","messageId":"73","endLine":50,"endColumn":15,"fix":"74"},{"ruleId":"60","severity":1,"message":"75","line":12,"column":10,"nodeType":"62","messageId":"63","endLine":12,"endColumn":20},{"ruleId":"60","severity":1,"message":"76","line":51,"column":12,"nodeType":"62","messageId":"63","endLine":51,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":61,"column":8,"nodeType":"79","endLine":61,"endColumn":20,"suggestions":"80"},{"ruleId":"60","severity":1,"message":"81","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":18},{"ruleId":"60","severity":1,"message":"82","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":17},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'getDates' is defined but never used.","'generateWeekFromStartOfWeek' is defined but never used.","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"85","text":"86"},"'formatDate' is defined but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'earliestDate', 'fetchDates', 'latestDate', and 'week'. Either include them or remove the dependency array.","ArrayExpression",["87"],"'Holidays' is defined but never used.","'addDays' is defined but never used.","no-global-assign","no-unsafe-negation",[1064,1065],"",{"desc":"88","fix":"89"},"Update the dependencies array to be: [earliestDate, fetchDates, latestDate, offsetDays, week]",{"range":"90","text":"91"},[1849,1861],"[earliestDate, fetchDates, latestDate, offsetDays, week]"]